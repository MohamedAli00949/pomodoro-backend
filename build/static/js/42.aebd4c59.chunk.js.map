{"version":3,"file":"static/js/42.aebd4c59.chunk.js","mappings":"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","sources":["components/Setting/Setting.js"],"sourcesContent":["import React, { useState, useEffect, lazy } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getSetting, modifySetting } from '../../actions/timer';\r\n\r\nimport { AiFillSound } from 'react-icons/ai';\r\nimport { BsArrowRight } from 'react-icons/bs';\r\nimport { CgTimelapse } from 'react-icons/cg';\r\nimport { MdNotifications } from 'react-icons/md';\r\nimport { TbFocus } from 'react-icons/tb';\r\n\r\nimport Loading from '../../utils/Loading';\r\nimport Message from '../../utils/Message';\r\nimport NetworkError from '../NetworkError/NetworkError';\r\n\r\nimport \"./style.css\";\r\nconst Header = lazy(() => import('./SettingHeader/header'));\r\nconst TimerSetting = lazy(() => import('./TimerSetting/TimerSetting'));\r\nconst SoundSetting = lazy(() => import('./SoundSetting/SoundSetting'));\r\nconst NotificationSetting = lazy(() => import('./NotificationSetting/NotificationSetting'));\r\nconst FocusSetting = lazy(() => import('./FocusSetting/FocusSetting'));\r\n\r\nfunction Setting({ setOpenSetting }) {\r\n  const { setting, isLoading, activites, active } = useSelector(state => state.timer);\r\n\r\n  const [message, setMessage] = useState({ type: '', message: \"\" });\r\n  const [data, setData] = useState(setting);\r\n  const [status, setStatus] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (setting === undefined && !isLoading) {\r\n      dispatch(getSetting(setMessage));\r\n    }\r\n    setData(setting);\r\n    // eslint-disable-next-line\r\n  }, [setting, isLoading]);\r\n\r\n  if (setting === undefined) {\r\n    return (\r\n      <Loading\r\n        size=\"200\"\r\n        strokeWidth=\"2.5\"\r\n        color=\"#ffffff\"\r\n        backgroud=\"transperent\"\r\n      />\r\n    )\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setData({ ...data, [e.target.name]: Number(e.target.value) })\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    await e.preventDefault();\r\n\r\n    console.log(data);\r\n\r\n    if (Object.values(data.time).includes(0)) {\r\n      setMessage({ message: \"Please enter valid time data\", type: 'error' });\r\n    }\r\n\r\n    if (!data.longInterval) {\r\n      setMessage({ message: \"Please enter long break interval\", type: 'error' });\r\n    }\r\n\r\n    if (!data.notificationInterval) {\r\n      setMessage({ message: \"Please enter long break interval\", type: 'error' });\r\n    }\r\n\r\n    const dataSent = { ...data };\r\n\r\n    Object.entries(data).forEach(([key, value]) => {\r\n      if (data[key] === setting[key]) {\r\n        delete dataSent[key];\r\n        // setData(data);\r\n      } else {\r\n        console.log(key, value);\r\n      }\r\n    });\r\n\r\n    if (Object.entries(dataSent).length !== 0) {\r\n      await dispatch(modifySetting(dataSent, setMessage));\r\n    }\r\n\r\n    setOpenSetting(false);\r\n  }\r\n\r\n  return (\r\n    <React.Suspense fallback={\r\n      <Loading\r\n        size=\"200\"\r\n        strokeWidth=\"5px\"\r\n        color=\"#ffffff\"\r\n        backgroud=\"transperent\"\r\n      />\r\n    }>\r\n      {message.message && (\r\n        <>\r\n          {(!message.message.includes('Network Error')) ? (\r\n            <Message {...message} setMessage={setMessage} />\r\n          ) : (\r\n            <NetworkError />\r\n          )}\r\n        </>\r\n      )}\r\n      {(setting && isLoading) && (\r\n        <div className=\"loading-container\" style={{\r\n          position: 'fixed',\r\n          top: '0',\r\n          right: '0',\r\n          background: '#ffffff73',\r\n          width: '100%',\r\n          height: '100%',\r\n          zIndex: '1000',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}>\r\n          <Loading\r\n            size=\"200\"\r\n            strokeWidth=\"5\"\r\n            color={activites[active].color}\r\n            backgroud=\"transperent\"\r\n          />\r\n        </div>\r\n      )}\r\n      <form className='glass-effect setting zoom-in' onSubmit={handleSubmit}>\r\n        <Header linkClick={handleSubmit} status={status} setStatus={setStatus} />\r\n        <>\r\n          {status === '' ? (\r\n            <>\r\n              <div className='setting-menu'>\r\n                <button\r\n                  aria-label='timer setting button'\r\n                  type='button'\r\n                  onClick={() => setStatus('timer')}>\r\n                  <span style={{ marginRight: \"40px\" }}>\r\n                    <CgTimelapse />\r\n                    <span className='text'>Timer Setting </span>\r\n                  </span> <BsArrowRight />\r\n                </button>\r\n                <button\r\n                  aria-label='sounds setting button'\r\n                  type='button'\r\n                  onClick={() => setStatus('sounds')}>\r\n                  <span style={{ marginRight: \"40px\" }}>\r\n                    <AiFillSound />\r\n                    <span className='text'>Sounds Setting</span>\r\n                  </span> <BsArrowRight />\r\n                </button>\r\n                {\"Notification\" in window && (\r\n                  <button\r\n                    aria-label='notifications setting button'\r\n                    type='button'\r\n                    onClick={() => setStatus('notifications')}>\r\n                    <span style={{ marginRight: \"40px\" }}>\r\n                      <MdNotifications />\r\n                      <span className='text'>Notifications Setting</span>\r\n                    </span> <BsArrowRight />\r\n                  </button>\r\n                )}\r\n                <button\r\n                  aria-label='focus setting button'\r\n                  type='button'\r\n                  onClick={() => setStatus('focus')}>\r\n                  <span style={{ marginRight: \"40px\" }}>\r\n                    <TbFocus />\r\n                    <span className='text'>Focus Setting</span>\r\n                  </span> <BsArrowRight />\r\n                </button>\r\n              </div>\r\n            </>\r\n          ) : status === 'timer' ? (\r\n            <>\r\n              <TimerSetting data={data} setData={setData} handleChange={handleChange} />\r\n            </>\r\n          ) : status === 'sounds' ? (\r\n            <>\r\n              <SoundSetting data={data} setData={setData} handleChange={handleChange} />\r\n            </>\r\n          ) : (status === 'notifications' && \"Notification\" in window) ? (\r\n            <>\r\n              <NotificationSetting data={data} setData={setData} handleChange={handleChange} />\r\n            </>\r\n          ) : (\r\n            <>\r\n              <FocusSetting data={data} setData={setData} handleChange={handleChange} />\r\n            </>\r\n          )}\r\n        </>\r\n\r\n        <div className='footer'>\r\n          <button type='button' aria-label='cancel form' onClick={() => setOpenSetting(false)}>cancel</button>\r\n          <button\r\n            className='save'\r\n            type='submit'\r\n            aria-label='submit form'\r\n            disabled={\r\n              (data && Object.values(data?.time).includes(0)) ||\r\n              data?.notificationInterval <= 0 ||\r\n              data?.longInterval <= 0 ||\r\n              (data?.alarmRepet < 0 || data?.alarmRepet > 60)\r\n            }>ok</button>\r\n        </div>\r\n      </form>\r\n    </React.Suspense>\r\n  );\r\n}\r\n\r\nexport default Setting;\r\n"],"names":["Header","lazy","TimerSetting","SoundSetting","NotificationSetting","FocusSetting","setOpenSetting","useSelector","state","timer","setting","isLoading","activites","active","useState","type","message","setMessage","data","setData","status","setStatus","dispatch","useDispatch","useEffect","undefined","getSetting","Loading","size","strokeWidth","color","backgroud","handleChange","e","target","name","Number","value","handleSubmit","preventDefault","console","log","Object","values","time","includes","longInterval","notificationInterval","dataSent","entries","forEach","key","length","modifySetting","fallback","NetworkError","Message","className","style","position","top","right","background","width","height","zIndex","display","alignItems","justifyContent","onSubmit","linkClick","onClick","marginRight","window","disabled","alarmRepet"],"sourceRoot":""}