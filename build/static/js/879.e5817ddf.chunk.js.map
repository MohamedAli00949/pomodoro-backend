{"version":3,"file":"static/js/879.e5817ddf.chunk.js","mappings":"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","sources":["icons/circularMenu/CircularMenu.js","components/Tasks/Task/Task.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst CircularMenu = () => {\r\n  const ds = [\"M12 13C12.5523 13 13 12.5523 13 12C13 11.4477 12.5523 11 12 11C11.4477 11 11 11.4477 11 12C11 12.5523 11.4477 13 12 13Z\", \"M12 6C12.5523 6 13 5.55228 13 5C13 4.44772 12.5523 4 12 4C11.4477 4 11 4.44772 11 5C11 5.55228 11.4477 6 12 6Z\", \"M12 20C12.5523 20 13 19.5523 13 19C13 18.4477 12.5523 18 12 18C11.4477 18 11 18.4477 11 19C11 19.5523 11.4477 20 12 20Z\"]\r\n  return (\r\n    <svg version=\"1.1\" stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" height=\"1em\" width=\"1em\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <g id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\r\n      <g id=\"SVGRepo_tracerCarrier\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n      <g id=\"SVGRepo_iconCarrier\">\r\n        {ds.map((d, index) => (\r\n          <path\r\n            key={index}\r\n            d={d}\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"2\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n          />\r\n        ))}\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default CircularMenu;\r\n","import React, { lazy, Suspense, useEffect, useState } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport CircularMenu from \"../../../icons/circularMenu/CircularMenu\";\r\n\r\nimport { FiEdit3 } from 'react-icons/fi';\r\nimport { MdDelete } from 'react-icons/md';\r\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from 'react-icons/im';\r\nimport { checkTask, deleteTask, CHANGE_ACTIVE_TASK } from \"../../../actions/tasks\";\r\nimport Loading from \"../../../utils/Loading\";\r\n\r\nconst TaskForm = lazy(() => import(\"../TaskForm/TaskForm\"));\r\n\r\nconst Task = ({ isLoading, setIsLoading, setMessage, ...props }) => {\r\n  const dispatch = useDispatch();\r\n  const { activeId } = useSelector(state => state.tasks);\r\n  const { setting } = useSelector(state => state.timer);\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (props.notes && document.querySelector(`.task#task-${props._id} .task-notes`)) {\r\n      // eslint-disable-next-line\r\n      let reg = /([\\w+]+\\:\\/\\/)?([\\w\\d-]+\\.)*[\\w-]+[\\.\\:]\\w+([\\/\\?\\=\\&\\#\\.]?[\\w-]+)*\\/?/gm\r\n      document.querySelector(`.task#task-${props._id} .task-notes`).innerHTML = \"<p>\" + props.notes.replaceAll(reg, (value) => `<a target=\"_blank\" href=\"${value}\">${value}</a>`) + \"</p>\";\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [props])\r\n\r\n  const handleCheck = () => {\r\n    dispatch(checkTask(props._id, setIsLoading, setMessage));\r\n    setOpenMenu(false);\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    dispatch(deleteTask(props._id, setIsLoading, setMessage));\r\n    setOpenMenu(false);\r\n  }\r\n\r\n  const handleActive = () => {\r\n    if ((!props.check && setting.autoStartNextTask) || (!setting.autoStartNextTask && props.act !== props.est)) {\r\n      if (activeId === props._id) {\r\n        dispatch({ type: CHANGE_ACTIVE_TASK, data: {} });\r\n      } else if (activeId !== props._id) {\r\n        dispatch({ type: CHANGE_ACTIVE_TASK, data: props });\r\n      }\r\n    }\r\n    // setOpenMenu(false);\r\n  }\r\n\r\n  if (openEdit) {\r\n    return (\r\n      <Suspense fallback={<Loading size=\"40\" strokeWidth=\"3\" color={\"rgb(197 197 197)\"} />}>\r\n        <TaskForm oldData={props} setOpen={setOpenEdit} isLoading={isLoading} setIsLoading={setIsLoading} />\r\n      </Suspense>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className={`task ${activeId === props._id ? \"active\" : ''}`}\r\n        id={`task-${props._id}`}\r\n        style={{\r\n          '--progress': `${props.act / props.est * 100}%`,\r\n        }}\r\n        onClick={handleActive}>\r\n        {isLoading === props._id && (\r\n          <div className=\"loading-container\">\r\n            <Loading size=\"40\" strokeWidth=\"3\" color={\"rgb(197 197 197)\"} />\r\n          </div>\r\n        )}\r\n        <div style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          width: \"100%\",\r\n          justifyContent: \"space-between\"\r\n        }}>\r\n          <div className=\"task-inner\">\r\n            <div className=\"icon-container\">\r\n              {props.check ? (\r\n                <ImCheckboxChecked className=\"task-uncheck\" />\r\n              ) : (\r\n                <ImCheckboxUnchecked className=\"task-check\" />\r\n              )}\r\n            </div>\r\n            <p style={{\r\n              textDecoration: props.check && \"line-through\"\r\n            }}>{props.name}</p>\r\n          </div>\r\n          <div style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            flexDirection: \"row\",\r\n            marginRight: '10px',\r\n          }}>\r\n            <p className=\"act-est\">\r\n              <span>{props.act}</span>\r\n              <span style={{\r\n                fontWeight: \"normal\",\r\n                fontSize: \"18px\",\r\n                marginInline: \"4px\"\r\n              }}>/</span>\r\n              <span>{props.est}</span>\r\n            </p>\r\n            <div className=\"menu\">\r\n              <button\r\n                aria-label=\"toggle the task list menu\"\r\n                className=\"toggle-menu\"\r\n                onClick={() => setOpenMenu(om => !om)}>\r\n                <CircularMenu />\r\n              </button>\r\n              {openMenu && (\r\n                <div className=\"menu-content\" style={{ right: 20 }}>\r\n                  <div className=\"row\">\r\n                    {!setting.autoStartNextTask && (\r\n                      <button aria-label=\"check button\" onClick={handleCheck}>\r\n                        {props.check ? (\r\n                          <>\r\n                            <ImCheckboxUnchecked />\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <ImCheckboxChecked />\r\n                          </>\r\n                        )}\r\n                      </button>\r\n                    )}\r\n                    <button\r\n                      aria-label=\"edit button\"\r\n                      onClick={() => setOpenEdit(oe => !oe)}\r\n                    >\r\n                      <FiEdit3 />\r\n                    </button>\r\n                    <button\r\n                      aria-label=\"delet button\"\r\n                      onClick={handleDelete}\r\n                      style={{ color: 'red' }}\r\n                      className=\"delete\"\r\n                    >\r\n                      <MdDelete />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {props.notes !== '' && (\r\n          <div className=\"task-notes\">\r\n            {/* <p>{notes.current}</p> */}\r\n            {/* <p>{props.notes.replaceAll(reg, (value) => `<a href=\"${value}\">${value}</a>`)}</p> */}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Task;\r\n"],"names":["version","stroke","fill","strokeWidth","height","width","viewBox","xmlns","id","strokeLinecap","strokeLinejoin","map","d","index","TaskForm","lazy","isLoading","setIsLoading","setMessage","props","dispatch","useDispatch","activeId","useSelector","state","tasks","setting","timer","useState","openEdit","setOpenEdit","openMenu","setOpenMenu","useEffect","notes","document","querySelector","_id","innerHTML","replaceAll","value","Suspense","fallback","Loading","size","color","oldData","setOpen","className","style","act","est","onClick","check","autoStartNextTask","type","CHANGE_ACTIVE_TASK","data","display","alignItems","justifyContent","textDecoration","name","flexDirection","marginRight","fontWeight","fontSize","marginInline","om","right","checkTask","oe","deleteTask"],"sourceRoot":""}