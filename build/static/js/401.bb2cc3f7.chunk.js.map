{"version":3,"file":"static/js/401.bb2cc3f7.chunk.js","mappings":"kMAsFA,MAhFA,YAAoE,IAA3CA,EAA0C,EAA1CA,cAAeC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,WAC7CC,EAAQ,IAAIC,MAAMJ,GAAeK,KAAK,GAAGC,KAAI,SAACC,EAAGC,GAAJ,OAAUA,EAAI,CAAd,IACnD,GAAsCC,EAAAA,EAAAA,UAASN,EAAMO,MAAM,EAAGT,EAAc,IAA5E,eAAOU,EAAP,KAAoBC,EAApB,KACA,GAAoCH,EAAAA,EAAAA,UAA2B,IAAlBT,EAAsB,CAAC,GAAK,IAAzE,eAAOa,EAAP,KAAmBC,EAAnB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACJd,EAAc,IAEdW,EADkB,IAAhBX,EACa,CAACA,EAAc,GAEf,IAGfa,EADEb,EAAcD,EAAgB,EAClB,CAACC,EAAc,GAEf,IAInB,GAAE,CAACA,KAGF,iBAAKe,UAAU,iBAAf,WACE,mBACE,aAAW,wBACXA,UAAU,aACVC,QAAS,kBAAMf,EAAWD,EAAc,EAA/B,EACTiB,SAAUjB,EAAc,IAAM,EAJhC,UAME,SAAC,MAAD,OAEF,iBAAKe,UAAU,QAAf,WACE,mBAAgBA,UAAS,mBAAc,IAAMf,EAAc,SAAW,IACpEgB,QAAS,kBAAMf,EAAW,EAAjB,EADX,cAAa,GAKXS,EAAY,GAAK,IAAO,+BACzBA,EAAYL,KAAI,SAAAa,GAAI,OACnB,mBAAmBH,UAAS,mBAAcG,IAASlB,EAAc,SAAW,IAC1EgB,QAAS,kBAAMf,EAAWiB,EAAjB,EADX,SAGGA,GAHUA,EADM,IAOH,IAAhBlB,GAAqBA,IAAgBD,IACrC,+BACE,mBAA0BgB,UAAW,kBACnCC,QAAS,kBAAMf,EAAWD,EAAjB,EADX,SAGGA,GAHUA,KAOhBY,EAAWP,KAAI,SAAAa,GAAI,OAClB,mBAAmBH,UAAS,mBAAcG,IAASlB,EAAc,SAAW,IAC1EgB,QAAS,kBAAMf,EAAWiB,EAAjB,EADX,SAGGA,GAHUA,EADK,IAOlBnB,EAAgBa,EAAW,GAAK,IAAO,gCACzC,mBAA4BG,UAAS,mBAAchB,IAAkBC,EAAc,SAAW,IAC5FgB,QAAS,kBAAMf,EAAWF,EAAjB,EADX,SAGGA,GAHUA,OAMf,mBACE,aAAW,oBACXgB,UAAU,aACVE,SAAUlB,IAAkBC,EAC5BgB,QAAS,kBAAMf,EAAWD,EAAc,EAA/B,EAJX,UAME,SAAC,MAAD,QAIP,C","sources":["components/Templates/PaginationBar/PaginationBar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport { MdKeyboardArrowLeft, MdKeyboardArrowRight } from 'react-icons/md';\r\n\r\nimport './style.css';\r\n\r\nfunction PaginationBar({ numberOfPages, currentPage, changePage }) {\r\n  const pages = new Array(numberOfPages).fill(1).map((p, i) => i + 1);\r\n  const [beforePages, setBeforePages] = useState(pages.slice(1, currentPage - 1))\r\n  const [afterPages, setAfterPages] = useState(numberOfPages !== 2 ? [2] : []);\r\n\r\n  useEffect(() => {\r\n    if (currentPage > 1) {\r\n      if (currentPage !== 2) {\r\n        setBeforePages([currentPage - 1])\r\n      } else {\r\n        setBeforePages([])\r\n      }\r\n      if (currentPage < numberOfPages - 1) {\r\n        setAfterPages([currentPage + 1])\r\n      } else {\r\n        setAfterPages([])\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [currentPage])\r\n\r\n  return (\r\n    <div className='pagination-bar'>\r\n      <button\r\n        aria-label='previous arrow button'\r\n        className='prev-arrow'\r\n        onClick={() => changePage(currentPage - 1)}\r\n        disabled={currentPage - 1 === 0}\r\n      >\r\n        <MdKeyboardArrowLeft />\r\n      </button>\r\n      <div className='pages'>\r\n        <button key={1} className={`page-num ${1 === currentPage ? 'active' : ''}`}\r\n          onClick={() => changePage(1)}\r\n        >\r\n          1\r\n        </button>\r\n        {(beforePages[0] > 2) && (<p>...</p>)}\r\n        {beforePages.map(page => (\r\n          <button key={page} className={`page-num ${page === currentPage ? 'active' : ''}`}\r\n            onClick={() => changePage(page)}\r\n          >\r\n            {page}\r\n          </button>\r\n        ))}\r\n        {(currentPage !== 1 && currentPage !== numberOfPages) && (\r\n          <>\r\n            <button key={currentPage} className={'page-num active'}\r\n              onClick={() => changePage(currentPage)}\r\n            >\r\n              {currentPage}\r\n            </button>\r\n          </>\r\n        )}\r\n        {afterPages.map(page => (\r\n          <button key={page} className={`page-num ${page === currentPage ? 'active' : ''}`}\r\n            onClick={() => changePage(page)}\r\n          >\r\n            {page}\r\n          </button>\r\n        ))}\r\n        {(numberOfPages - afterPages[0] > 1) && (<p>...</p>)}\r\n        <button key={numberOfPages} className={`page-num ${numberOfPages === currentPage ? 'active' : ''}`}\r\n          onClick={() => changePage(numberOfPages)}\r\n        >\r\n          {numberOfPages}\r\n        </button>\r\n      </div>\r\n      <button\r\n        aria-label='next arrow button'\r\n        className='prev-arrow'\r\n        disabled={numberOfPages === currentPage}\r\n        onClick={() => changePage(currentPage + 1)}\r\n      >\r\n        <MdKeyboardArrowRight />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaginationBar;\r\n"],"names":["numberOfPages","currentPage","changePage","pages","Array","fill","map","p","i","useState","slice","beforePages","setBeforePages","afterPages","setAfterPages","useEffect","className","onClick","disabled","page"],"sourceRoot":""}