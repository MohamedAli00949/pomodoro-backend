{"version":3,"file":"static/js/174.7808b077.chunk.js","mappings":"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","sources":["components/Tasks/Task/Task.js","icons/circularMenu/CircularMenu.js"],"sourcesContent":["import React, { lazy, Suspense, useEffect, useState } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport CircularMenu from \"../../../icons/circularMenu/CircularMenu\";\r\n\r\nimport { FiEdit3 } from 'react-icons/fi';\r\nimport { MdDelete, MdKeyboardArrowRight } from 'react-icons/md';\r\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from 'react-icons/im';\r\nimport { RiCheckboxCircleFill, RiCheckboxBlankCircleLine } from 'react-icons/ri';\r\nimport { checkTask, deleteTask, CHANGE_ACTIVE_TASK } from \"../../../actions/tasks\";\r\nimport Loading from \"../../../utils/Loading\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst DeletePopup = lazy(() => import(\"./../../../utils/DeletePopup/DeletePopup\"));\r\nconst TaskForm = lazy(() => import(\"../TaskForm/TaskForm\"));\r\n\r\nconst Task = ({ isLoading, setIsLoading, setMessage, setActiveTemplate, setTemplateData, activeTemplate, ...props }) => {\r\n  const dispatch = useDispatch();\r\n  const { activeId } = useSelector(state => state.tasks);\r\n  const { setting } = useSelector(state => state.timer);\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n  const [openDelete, setOpenDelete] = useState(false);\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (props.notes && document.querySelector(`.task#task-${props._id} .task-notes`)) {\r\n      // eslint-disable-next-line\r\n      let reg = /([\\w+]+\\:\\/\\/)?([\\w\\d-]+\\.)*[\\w-]+[\\.\\:]\\w+([\\/\\?\\=\\&\\#\\.]?[\\w-]+)*\\/?/gm\r\n      document.querySelector(`.task#task-${props._id} .task-notes`).innerHTML = \"<p>\" + props.notes.replaceAll(reg, (value) => `<a target=\"_blank\" href=\"${value}\">${value}</a>`) + \"</p>\";\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [props])\r\n\r\n  const handleCheck = () => {\r\n    dispatch(checkTask(props._id, setIsLoading, setMessage));\r\n    setOpenMenu(false);\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    setOpenDelete(false);\r\n    if (props?._id) {\r\n      dispatch(deleteTask(props._id, props?.template || null, setIsLoading, setMessage));\r\n    } else {\r\n      setTemplateData(t => ({ ...t, tasks: t.tasks.filter(task => task.id !== props.id) }))\r\n    };\r\n  }\r\n\r\n\r\n  const handleActive = () => {\r\n    if (props.tasks?.length === 0) {\r\n      if ((!props.check && setting.autoStartNextTask) || (!setting.autoStartNextTask && props.act !== props.est)) {\r\n        if (activeId === props._id) {\r\n          dispatch({ type: CHANGE_ACTIVE_TASK, data: {} });\r\n        } else if (activeId !== props._id) {\r\n          dispatch({ type: CHANGE_ACTIVE_TASK, data: { ...props, _id: props.template?._id ? props.template?._id + \",\" + props._id : props._id } });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const toggleEdit = () => {\r\n    setOpenEdit(true);\r\n    setOpenMenu(false);\r\n  }\r\n\r\n  const toggleDelete = () => {\r\n    setOpenDelete(true);\r\n    setOpenMenu(false);\r\n  }\r\n\r\n  if (openEdit) {\r\n    return (\r\n      <Suspense fallback={<Loading size=\"40\" strokeWidth=\"3\" color={\"rgb(197 197 197)\"} />}>\r\n        <TaskForm\r\n          oldData={props}\r\n          setOpen={setOpenEdit}\r\n          isLoading={isLoading}\r\n          setIsLoading={setIsLoading}\r\n          setMessage={setMessage}\r\n          template={props?.template ? props.template : null}\r\n          setTemplateData={setTemplateData}\r\n        />\r\n      </Suspense>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {openDelete && (\r\n        <DeletePopup\r\n          type={<><span>{props.name}</span> {props.tasks?.length > 0 ? 'template' : 'task'}</>}\r\n          onCancel={() => setOpenDelete(false)} onOk={handleDelete}\r\n        />\r\n      )}\r\n      <div\r\n        className={`task ${activeId === props._id ? \"active\" : ''}`}\r\n        id={`task-${props._id}`}\r\n        style={{\r\n          '--progress': `${props.act / props.est * 100}%`,\r\n        }}\r\n        onDoubleClick={handleActive}>\r\n        {isLoading === props._id && (\r\n          <div className=\"loading-container\">\r\n            <Loading size=\"40\" strokeWidth=\"3\" color={\"rgb(197 197 197)\"} />\r\n          </div>\r\n        )}\r\n        <div style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          width: \"100%\",\r\n          justifyContent: \"space-between\"\r\n        }}>\r\n          <div className=\"task-inner\">\r\n            <div className=\"icon-container\">\r\n              {props.check ? (\r\n                <>\r\n                  {\r\n                    (props.template !== null) ? (\r\n                      <RiCheckboxCircleFill className=\"task-uncheck\" />\r\n                    ) : (\r\n                      <ImCheckboxChecked className=\"task-uncheck\" />\r\n                    )\r\n                  }\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {props.template !== null ? (\r\n                    <RiCheckboxBlankCircleLine className=\"task-check\" />\r\n                  ) : (\r\n                    <ImCheckboxUnchecked className=\"task-check\" />\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n            <p style={{\r\n              textDecoration: props.check && \"line-through\"\r\n            }}>{props.name}</p>\r\n          </div>\r\n          <div style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            flexDirection: \"row\",\r\n          }}>\r\n            <p className=\"act-est\">\r\n              {(!props.template?.todo && props.template) ? (<></>) : (\r\n                <>\r\n                  <span>{props.act}</span>\r\n                  <span style={{\r\n                    fontWeight: \"normal\",\r\n                    fontSize: \"18px\",\r\n                    marginInline: \"4px\"\r\n                  }}>/</span>\r\n                </>\r\n              )}\r\n              <span>{props.est}</span>\r\n            </p>\r\n            <div className=\"menu\">\r\n              <button\r\n                aria-label=\"toggle the task list menu\"\r\n                className=\"toggle-menu\"\r\n                onClick={() => setOpenMenu(om => !om)}>\r\n                <CircularMenu />\r\n              </button>\r\n              {openMenu && (\r\n                <div className=\"menu-content\">\r\n                  <div className=\"row\">\r\n                    {((props.template?.todo && props.template) || (!props.template && props.tasks.length === 0)) && (\r\n                      <>\r\n                        {(!setting?.autoStartNextTask) && (\r\n                          <button aria-label=\"check button\" onClick={handleCheck}>\r\n                            {!props.check ? (\r\n                              <>\r\n                                {\r\n                                  (props.template !== null) ? (\r\n                                    <RiCheckboxCircleFill />\r\n                                  ) : (\r\n                                    <ImCheckboxChecked />\r\n                                  )\r\n                                }\r\n                              </>\r\n                            ) : (\r\n                              <>\r\n                                {props.template !== null ? (\r\n                                  <RiCheckboxBlankCircleLine />\r\n                                ) : (\r\n                                  <ImCheckboxUnchecked />\r\n                                )}\r\n                              </>\r\n                            )}\r\n                          </button>\r\n                        )}\r\n                      </>\r\n                    )}\r\n                    <button\r\n                      aria-label=\"edit button\"\r\n                      onClick={toggleEdit}\r\n                    >\r\n                      <FiEdit3 />\r\n                    </button>\r\n                    <button\r\n                      aria-label=\"delet button\"\r\n                      onClick={toggleDelete}\r\n                      style={{ color: 'red' }}\r\n                      className=\"delete\"\r\n                    >\r\n                      <MdDelete />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n            {props.tasks?.length > 0 && (\r\n              <button aria-label=\"toggle the tasks list\"\r\n                className=\"show-tasks\"\r\n                onClick={() => setActiveTemplate(props)}>\r\n                <MdKeyboardArrowRight />\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {props.notes !== '' && (\r\n          <div className=\"task-notes\">\r\n          </div>\r\n        )}\r\n      </div >\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Task;\r\n","import React from 'react';\r\n\r\nconst CircularMenu = () => {\r\n  const ds = [\"M12 13C12.5523 13 13 12.5523 13 12C13 11.4477 12.5523 11 12 11C11.4477 11 11 11.4477 11 12C11 12.5523 11.4477 13 12 13Z\", \"M12 6C12.5523 6 13 5.55228 13 5C13 4.44772 12.5523 4 12 4C11.4477 4 11 4.44772 11 5C11 5.55228 11.4477 6 12 6Z\", \"M12 20C12.5523 20 13 19.5523 13 19C13 18.4477 12.5523 18 12 18C11.4477 18 11 18.4477 11 19C11 19.5523 11.4477 20 12 20Z\"]\r\n  return (\r\n    <svg version=\"1.1\" stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" height=\"1em\" width=\"1em\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <g id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\r\n      <g id=\"SVGRepo_tracerCarrier\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n      <g id=\"SVGRepo_iconCarrier\">\r\n        {ds.map((d, index) => (\r\n          <path\r\n            key={index}\r\n            d={d}\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"2\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n          />\r\n        ))}\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default CircularMenu;\r\n"],"names":["DeletePopup","lazy","TaskForm","isLoading","setIsLoading","setMessage","setActiveTemplate","setTemplateData","props","activeTemplate","dispatch","useDispatch","activeId","useSelector","state","tasks","setting","timer","useState","openEdit","setOpenEdit","openDelete","setOpenDelete","openMenu","setOpenMenu","useEffect","notes","document","querySelector","_id","innerHTML","replaceAll","value","Suspense","fallback","Loading","size","strokeWidth","color","oldData","setOpen","template","type","name","length","onCancel","onOk","deleteTask","t","filter","task","id","className","style","act","est","onDoubleClick","check","autoStartNextTask","CHANGE_ACTIVE_TASK","data","display","alignItems","width","justifyContent","textDecoration","flexDirection","todo","fontWeight","fontSize","marginInline","onClick","om","CircularMenu","checkTask","version","stroke","fill","height","viewBox","xmlns","strokeLinecap","strokeLinejoin","map","d","index"],"sourceRoot":""}