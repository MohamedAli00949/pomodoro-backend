{"version":3,"file":"static/js/73.b5c7e869.chunk.js","mappings":"iJAIMA,GAASC,EAAAA,EAAAA,OAAK,kBAAM,oDAAN,IACdC,GAAaD,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAClBE,GAAeF,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAsF1B,UApFqB,SAAC,GAAqC,IAAnCG,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACpCC,EAAc,CAClB,CACEC,KAAM,aACNC,KAAM,qBAER,CACED,KAAM,eACNC,KAAM,wBAER,CACED,KAAM,oBACNC,KAAM,yBAIV,OACE,iCACE,iBAAKC,UAAU,QAAQC,MAAO,CAAEC,cAAe,OAA/C,WACE,0CACA,SAACZ,EAAD,CACEa,QAAS,CAAC,SAAU,WACpBL,KAAK,SACLH,KAAMA,EACNC,QAASA,EACTQ,UAAW,WAAS,EACpBC,MAAM,cAGV,iBAAKL,UAAU,QAAf,WACE,kCACA,gBAAKA,UAAU,cAAf,SACG,CAACM,EAAAA,GAAQC,EAAAA,GAAOC,EAAAA,IAAMC,KAAI,SAACC,EAAMC,GAAP,OACzB,iBAAKX,UAAU,OAAf,WACE,wBAAe,IAAVW,EAAc,WAAaD,EAAKE,uBACrC,SAACpB,EAAD,CACEO,KAAMW,EACNf,KAAMA,EACNC,QAASA,MALce,EADF,UAY/B,iBAAKX,UAAU,QAAQC,MAAO,CAAEC,cAAe,OAA/C,WACE,iDACA,gBAAKD,MAAO,CACVY,QAAS,OACTC,WAAY,SACZC,eAAgB,WAChBV,MAAO,eAJT,UAME,kBACEL,WAAe,OAAJL,QAAI,IAAJA,OAAA,EAAAA,EAAMqB,eAAgB,EAAI,aAAUC,EAC/ClB,KAAK,eACLD,KAAK,SACLoB,IAAI,IACJC,IAAI,MACJC,aAAY,OAAEzB,QAAF,IAAEA,OAAF,EAAEA,EAAMqB,aACpBK,SAAU3B,SAIfG,EAAYY,KAAI,SAACa,EAAMX,GAAP,OACf,gBAAKX,UAAU,QAAQC,MAAO,CAAEsB,OAAQZ,IAAUd,EAAY2B,OAAO,EAAI,OAAS,IAAlF,UACE,iBAAKvB,MAAO,CACVY,QAAS,OACTC,WAAY,SACZC,eAAgB,gBAChBU,SAAU,QAJZ,WAME,eAAIxB,MAAO,CAAEI,MAAO,eAApB,SAAsCiB,EAAKvB,QAC3C,SAACN,EAAD,CACEK,KAAMwB,EAAKxB,KACXH,KAAMA,EACNC,QAASA,QAX8Ee,EAD9E,MAmBtB,C","sources":["components/Setting/TimerSetting/TimerSetting.js"],"sourcesContent":["import React, { lazy } from 'react';\r\n\r\nimport { LONG, PERIOD, SHORT } from \"../../../actions/timer\";\r\n\r\nconst Select = lazy(() => import('../Select'));\r\nconst TimeInputs = lazy(() => import('../timeInputs'));\r\nconst ToggleButton = lazy(() => import('../ToggleButton'));\r\n\r\nconst TimerSetting = ({ handleChange, data, setData }) => {\r\n  const automations = [\r\n    {\r\n      type: \"autoBreaks\",\r\n      name: \"Auto start breaks\"\r\n    },\r\n    {\r\n      type: \"autoPomodors\",\r\n      name: \"Auto start pomodoros\"\r\n    },\r\n    {\r\n      type: \"autoStartNextTask\",\r\n      name: \"Auto start next task\"\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <div className='block' style={{ flexDirection: \"row\" }}>\r\n        <h3>Timer format</h3>\r\n        <Select\r\n          options={[\"analog\", \"digital\"]}\r\n          type=\"format\"\r\n          data={data}\r\n          setData={setData}\r\n          setChange={() => { }}\r\n          width=\"106px\"\r\n        />\r\n      </div>\r\n      <div className='block'>\r\n        <h3>Time</h3>\r\n        <div className='time-inputs'>\r\n          {[PERIOD, SHORT, LONG].map((item, index) => (\r\n            <div className='time' key={index}>\r\n              <h4>{index === 0 ? 'Pomodoro' : item.toLocaleLowerCase()}</h4>\r\n              <TimeInputs\r\n                name={item}\r\n                data={data}\r\n                setData={setData}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className='block' style={{ flexDirection: \"row\" }}>\r\n        <h3>Long Break Interval</h3>\r\n        <div style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"flex-end\",\r\n          width: 'fit-content'\r\n        }}>\r\n          <input\r\n            className={data?.longInterval <= 0 ? 'error' : undefined}\r\n            name='longInterval'\r\n            type=\"number\"\r\n            min=\"1\"\r\n            max=\"100\"\r\n            defaultValue={data?.longInterval}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      {automations.map((auto, index) => (\r\n        <div className='block' style={{ border: index === automations.length-1 ? 'none' : '' }} key={index}>\r\n          <div style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            flexWrap: \"wrap\",\r\n          }}>\r\n            <h3 style={{ width: 'fit-content' }}>{auto.name}</h3>\r\n            <ToggleButton\r\n              type={auto.type}\r\n              data={data}\r\n              setData={setData}\r\n            />\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TimerSetting;\r\n"],"names":["Select","lazy","TimeInputs","ToggleButton","handleChange","data","setData","automations","type","name","className","style","flexDirection","options","setChange","width","PERIOD","SHORT","LONG","map","item","index","toLocaleLowerCase","display","alignItems","justifyContent","longInterval","undefined","min","max","defaultValue","onChange","auto","border","length","flexWrap"],"sourceRoot":""}