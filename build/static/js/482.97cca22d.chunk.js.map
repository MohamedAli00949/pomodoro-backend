{"version":3,"file":"static/js/482.97cca22d.chunk.js","mappings":"oMA2EA,UAhEa,SAAC,GAAoB,IAAlBA,EAAiB,EAAjBA,WACNC,GAAUC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,KAAV,IAA3BA,MACR,GAAgCG,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAkBjB,OACE,+BACE,iBAAKC,UAAU,OAAf,WACE,mBACE,aAAW,4BACXA,UAAU,cACVC,QAAS,kBAAMJ,GAAY,SAAAK,GAAE,OAAKA,CAAL,GAApB,EACTC,MAAO,CAAEC,SAAU,GAAIC,MAAO,QAC9BC,SAA4B,KAAb,OAALd,QAAK,IAALA,OAAA,EAAAA,EAAOe,QALnB,UAME,SAAC,MAAD,MAEDX,IACC,gBAAKI,UAAU,eAAf,UACE,iBAAKA,UAAU,MAAf,WACE,oBACE,aAAW,4BACXC,QA/BmB,WAC/BJ,GAAY,SAAAK,GAAE,OAAKA,CAAL,IACdJ,GAASU,EAAAA,EAAAA,IAAmBjB,GAC7B,EA4BgDkB,KAAK,SACxCH,SAAgD,IAAtCd,EAAMkB,QAAO,SAAAC,GAAC,OAAIA,EAAEC,KAAN,IAAaL,OAHvC,WAIC,SAAC,MAAD,IAJD,KAIc,oDACd,oBACE,aAAW,gCACXN,QA/BS,WACrBJ,GAAY,SAAAK,GAAE,OAAKA,CAAL,IACdJ,GAASe,EAAAA,EAAAA,IAAStB,GACnB,EA4BsCkB,KAAK,SAC9BH,SAAkD,IAAxCd,EAAMkB,QAAO,SAAAC,GAAC,OAAIA,EAAEG,IAAM,CAAZ,IAAeP,OAHzC,WAIC,SAAC,MAAD,IAJD,KAIe,mDAOf,oBACEE,KAAK,SACL,aAAW,kBACXR,QAtCW,WACvBJ,GAAY,SAAAK,GAAE,OAAKA,CAAL,IACdJ,GAASiB,EAAAA,EAAAA,IAAcxB,GACxB,EAgCW,WAIC,SAAC,MAAD,IAJD,KAIc,uDAO3B,C","sources":["components/Tasks/TasksMenu/TasksMenu.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// import { AiOutlinePlus } from 'react-icons/ai';\r\nimport { HiMenu } from \"react-icons/hi\";\r\nimport { MdDelete } from 'react-icons/md';\r\nimport { BsCheckLg } from 'react-icons/bs';\r\n// import { FiSave } from \"react-icons/fi\";\r\nimport { clearFinishedTasks, clearAct, clearAllTasks } from \"../../../actions/tasks\";\r\n\r\nconst Menu = ({ setMessage }) => {\r\n  const { tasks } = useSelector(state => state.tasks);\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n  const dispatch = useDispatch();\r\n  // const [message, setMessage] = useState({ type: '', message: '' })\r\n\r\n  const handleClearFinishedTasks = () => {\r\n    setOpenMenu(om => !om);\r\n    dispatch(clearFinishedTasks(setMessage));\r\n  }\r\n\r\n  const handleClearAct = () => {\r\n    setOpenMenu(om => !om);\r\n    dispatch(clearAct(setMessage));\r\n  }\r\n\r\n  const handleClearTasks = () => {\r\n    setOpenMenu(om => !om);\r\n    dispatch(clearAllTasks(setMessage));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"menu\">\r\n        <button\r\n          aria-label=\"toggle the task list menu\"\r\n          className=\"toggle-menu\"\r\n          onClick={() => setOpenMenu(om => !om)}\r\n          style={{ fontSize: 25, color: \"#fff\" }}\r\n          disabled={tasks?.length === 0}>\r\n          <HiMenu />\r\n        </button>\r\n        {openMenu && (\r\n          <div className=\"menu-content\">\r\n            <div className=\"row\">\r\n              <button\r\n                aria-label=\"delete all finished tasks\"\r\n                onClick={handleClearFinishedTasks} type='button'\r\n                disabled={tasks.filter(t => t.check).length === 0}\r\n              ><MdDelete /> <p>clear finished tasks</p></button>\r\n              <button\r\n                aria-label=\"clear all act pomodoros tasks\"\r\n                onClick={handleClearAct} type='button'\r\n                disabled={tasks.filter(t => t.act > 0).length === 0}\r\n              ><BsCheckLg /> <p>clear act pomodoros</p></button>\r\n              {/* <button\r\n                aria-label=\"save the task list as templete\"\r\n              ><FiSave /> <p><mark>save as templete</mark></p></button>\r\n              <button\r\n                aria-label=\"add task from templets\"\r\n              ><AiOutlinePlus /> <p><mark>add from templetes</mark></p></button> */}\r\n              <button\r\n                type='button'\r\n                aria-label=\"clear all tasks\"\r\n                onClick={handleClearTasks}\r\n              ><MdDelete /> <p>clear all tasks</p></button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Menu;\r\n"],"names":["setMessage","tasks","useSelector","state","useState","openMenu","setOpenMenu","dispatch","useDispatch","className","onClick","om","style","fontSize","color","disabled","length","clearFinishedTasks","type","filter","t","check","clearAct","act","clearAllTasks"],"sourceRoot":""}