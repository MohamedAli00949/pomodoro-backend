{"version":3,"file":"static/js/133.669f7c22.chunk.js","mappings":"yOAyGA,MA9FA,YAAsF,IAAjEA,EAAgE,EAAhEA,kBAAmBC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,gBAAiBC,EAAc,EAAdA,WAC/DC,GAAWC,EAAAA,EAAAA,MACjB,GAAgCC,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA2CC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUC,aAApB,IAApDD,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,aAgBpBC,EAAoB,SAACC,GACzB,IAAMC,EAAShB,EAAaiB,IAAI,UAChCjB,EAAakB,IAAI,OAAQH,EAAEI,OAAOC,KAClCnB,EAAgBD,IAEH,OAATU,QAAS,IAATA,OAAA,EAAAA,EAAWW,UAAWT,GACxBT,EAAS,CAAEmB,KAAMC,EAAAA,GAAeC,KAAM,cACtCrB,EAAS,CAAEmB,KAAMG,EAAAA,GAAsBD,KAAMT,EAAEI,OAAOC,MACtDjB,EAAS,CAAEmB,KAAMI,EAAAA,GAAaF,KAAM,eAGlCrB,EADa,KAAXa,GACOW,EAAAA,EAAAA,IAAgBX,EAAQD,EAAEI,OAAOC,IAAK,EAAGlB,EAAYU,EAAOF,EAAUW,SAEtEO,EAAAA,EAAAA,IAAoB,YAAa,EAAG1B,GAGlD,EAED,OACE,iBAAK2B,UAAU,aAAf,WACE,4BACE,iBAAKA,UAAU,iBAAf,WACE,iBAAMA,UAAU,OAAhB,UACE,SAAC,MAAD,OAEF,kBACEP,KAAK,SACLQ,YAAY,mBACZC,MAAO/B,EAAaiB,IAAI,WAAa,GACrCe,SA3CsB,SAACjB,GAAO,IAAD,EAC/BkB,EAAOjC,EAAaiB,IAAI,QAC9BjB,EAAakB,IAAI,SAAUH,EAAEI,OAAOY,OACpC9B,EAAgBD,IAEA,OAAZa,QAAY,IAAZA,GAAA,UAAAA,EAAcH,iBAAd,eAAyBW,WAAzB,OAAoCR,QAApC,IAAoCA,OAApC,EAAoCA,EAAcD,QACpDT,EAAS,CAAEmB,KAAMC,EAAAA,GAAeC,KAAM,cACtCrB,EAAS,CAAEmB,KAAMY,EAAAA,GAAwBV,KAAM,CAAEW,MAAOpB,EAAEI,OAAOY,MAAOK,KAAM,KAC9EjC,EAAS,CAAEmB,KAAMI,EAAAA,GAAaF,KAAM,eAEpCrB,GAASwB,EAAAA,EAAAA,IAAgBZ,EAAEI,OAAOY,MAAOE,EAAM,EAAG/B,GAErD,QAkCK,iBAAK2B,UAAU,OAAf,WACE,oBACE,aAAW,4BACXA,UAAU,cACVQ,QAAS,kBAAM9B,GAAY,SAAA+B,GAAE,OAAKA,CAAL,GAApB,EAHX,WAIE,iBAAMT,UAAU,OAAhB,mBAGA,iBAAMA,UAAU,OAAhB,UACE,SAAC,MAAD,CAAkBA,UAAU,eAG/BvB,IACC,gBAAKuB,UAAU,eAAf,UACE,iBAAKA,UAAU,MAAf,WACE,mBACE,aAAW,2BACXP,KAAK,SAELe,QAASvB,EAJX,yBAGM,cAKN,mBAAQ,aAAW,mBAAmBQ,KAAK,SAASS,MAAM,OAAOM,QAASvB,EAA1E,8BAQV,oBAAQ,aAAW,eAAee,UAAU,WAAWQ,QAAS,kBAAMtC,GAAkB,EAAxB,EAAhE,WACE,iBAAM8B,UAAU,OAAhB,UACE,SAAC,MAAD,OAEF,iBAAMA,UAAU,OAAhB,+BAMP,C","sources":["components/Templates/SearchBar/SearchBar.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { AiOutlinePlus, AiOutlineSearch } from 'react-icons/ai';\r\n\r\nimport { RiArrowDownSLine } from \"react-icons/ri\";\r\n\r\nimport './style.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SEARCH_USER_TEMPLATRES, SORT_USER_TEMPLATRES, getTemplatesForUser, searchTemplates } from '../../../actions/templates';\r\nimport { END_LOADING, START_LOADING } from '../../../actions/auth';\r\n\r\nfunction SearchBar({ setOpenFormForNew, searchParams, setSearchParams, setMessage }) {\r\n  const dispatch = useDispatch();\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n  const { templates, total, originalData } = useSelector(state => state.templates.userTemplates);\r\n\r\n  const handleChangeSearchQuery = (e) => {\r\n    const sort = searchParams.get('sort');\r\n    searchParams.set(\"search\", e.target.value);\r\n    setSearchParams(searchParams);\r\n\r\n    if (originalData?.templates?.length === originalData?.total) {\r\n      dispatch({ type: START_LOADING, data: 'templates' });\r\n      dispatch({ type: SEARCH_USER_TEMPLATRES, data: { query: e.target.value, page: 1 } })\r\n      dispatch({ type: END_LOADING, data: 'templates' });\r\n    } else {\r\n      dispatch(searchTemplates(e.target.value, sort, 1, setMessage));\r\n    }\r\n  }\r\n\r\n  const handleSortElement = (e) => {\r\n    const search = searchParams.get('search');\r\n    searchParams.set(\"sort\", e.target.key);\r\n    setSearchParams(searchParams);\r\n\r\n    if (templates?.length === total) {\r\n      dispatch({ type: START_LOADING, data: 'templates' });\r\n      dispatch({ type: SORT_USER_TEMPLATRES, data: e.target.key })\r\n      dispatch({ type: END_LOADING, data: 'templates' });\r\n    } else {\r\n      if (search !== '') {\r\n        dispatch(searchTemplates(search, e.target.key, 1, setMessage, total, templates.length));\r\n      } else {\r\n        dispatch(getTemplatesForUser(\"updatedAt\", 1, setMessage))\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='search-bar'>\r\n      <div>\r\n        <div className='search-keyword'>\r\n          <span className='icon'>\r\n            <AiOutlineSearch />\r\n          </span>\r\n          <input\r\n            type='search'\r\n            placeholder='Write your query'\r\n            value={searchParams.get('search') || \"\"}\r\n            onChange={handleChangeSearchQuery}\r\n          />\r\n        </div>\r\n        <div className=\"menu\" >\r\n          <button\r\n            aria-label=\"toggle the task list menu\"\r\n            className=\"toggle-menu\"\r\n            onClick={() => setOpenMenu(om => !om)}>\r\n            <span className='text'>\r\n              Sort\r\n            </span>\r\n            <span className='icon'>\r\n              <RiArrowDownSLine className='arrow' />\r\n            </span>\r\n          </button>\r\n          {openMenu && (\r\n            <div className=\"menu-content\">\r\n              <div className=\"row\">\r\n                <button\r\n                  aria-label=\"Last updated sort choice\"\r\n                  type='button'\r\n                  key=\"updatedAt\"\r\n                  onClick={handleSortElement}\r\n                >\r\n                  Last Updated\r\n                </button>\r\n                <button aria-label=\"Name sort choice\" type='button' value=\"name\" onClick={handleSortElement}>\r\n                  Name\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <button aria-label='New template' className='add-temp' onClick={() => setOpenFormForNew(true)}>\r\n        <span className='icon'>\r\n          <AiOutlinePlus />\r\n        </span>\r\n        <span className='text'>\r\n          Add Template\r\n        </span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n"],"names":["setOpenFormForNew","searchParams","setSearchParams","setMessage","dispatch","useDispatch","useState","openMenu","setOpenMenu","useSelector","state","templates","userTemplates","total","originalData","handleSortElement","e","search","get","set","target","key","length","type","START_LOADING","data","SORT_USER_TEMPLATRES","END_LOADING","searchTemplates","getTemplatesForUser","className","placeholder","value","onChange","sort","SEARCH_USER_TEMPLATRES","query","page","onClick","om"],"sourceRoot":""}