{"version":3,"file":"static/js/441.150dea44.chunk.js","mappings":"8NAQMA,GAASC,EAAAA,EAAAA,OAAK,kBAAM,qDAAN,IA6EpB,MA3EA,YAAyC,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QACrBC,EAAkB,UAATH,EAAmBI,EAAAA,GAAuB,YAATJ,EAAqBK,EAAAA,GAAgBC,EAAAA,GAC/EC,GAAgBC,EAAAA,EAAAA,SAAOC,EAAAA,EAAAA,GAAY,CAAEC,IAAKT,EAAK,GAAD,OAAID,EAAJ,SAAgBU,IAAKC,OAAQV,EAAK,GAAD,OAAID,EAAJ,cACrF,GAA4BY,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACO,OAAXF,GAAgD,SAA7BZ,EAAK,GAAD,OAAID,EAAJ,SAAgBgB,OACzCT,EAAcU,QAAQC,WAAWjB,EAAK,GAAD,OAAID,EAAJ,SAAgBU,KACrDH,EAAcU,QAAQE,aAAalB,EAAK,GAAD,OAAID,EAAJ,YACvCO,EAAcU,QAAQG,aAGzB,GAAE,CAACP,IAEJ,IAAMQ,EAAe,SAACC,GACpB,IAAMC,EAAQC,OAAOF,EAAEG,OAAOF,OAE9BrB,GAAQ,kBAAKD,GAAN,cAAaqB,EAAEG,OAAOT,KAAOO,KACpCT,GAAWD,EACZ,EAED,OACE,iBAAKa,UAAU,gBAAf,WACE,iBAAKA,UAAU,aAAf,WACE,mCACA,SAAC5B,EAAD,CACEG,KAAMA,EACN0B,QAASxB,EACTD,QAASA,EACTF,KAAI,UAAKA,EAAL,QACJc,UAAWA,EACXc,MAAgB,UAAT5B,EAAmB,QAAU,aAGV,SAA7BC,EAAK,GAAD,OAAID,EAAJ,SAAgBgB,OACnB,iBAAKU,UAAU,aAAf,WACE,oCACA,iBAAKA,UAAU,kBAAf,WACE,iBAAMA,UAAU,cAAhB,SAA+BzB,EAAK,GAAD,OAAID,EAAJ,cACnC,kBACEA,KAAK,QACL0B,UAAU,QACVG,IAAI,KACJC,IAAI,MACJP,MAAOtB,EAAK,GAAD,OAAID,EAAJ,WACXgB,KAAI,UAAKhB,EAAL,UACJ+B,SAAUV,EACVW,MAAO,CAAEC,WAAW,iFAAD,OAAmFhC,EAAK,GAAD,OAAID,EAAJ,WAAvF,0BAA0HC,EAAK,GAAD,OAAID,EAAJ,WAA9H,iCAKjB,UAATA,IACC,iBAAK0B,UAAU,aAAaM,MAAO,CACjCE,cAAe,OADjB,WAGE,oCACA,iBAAKR,UAAU,mBAAf,WACE,kBACEM,MAAO,CAAEG,aAAc,UACvBT,WAAgB,OAAJzB,QAAI,IAAJA,OAAA,EAAAA,EAAMmC,YAAa,IAAS,OAAJnC,QAAI,IAAJA,OAAA,EAAAA,EAAMmC,YAAa,GAAM,aAAUC,EACvErC,KAAK,SACL6B,IAAI,IACJC,IAAI,KACJQ,aAAY,OAAErC,QAAF,IAAEA,OAAF,EAAEA,EAAMmC,WACpBpB,KAAK,aACLe,SAAUV,KACZ,cAAGW,MAAO,CAAEO,WAAY,IAAxB,yBAMX,C","sources":["components/Setting/SoundSetting/Sound/Sound.js"],"sourcesContent":["import React, { lazy, useEffect, useRef, useState } from 'react';\r\n\r\nimport { alarmSounds, tickingSounds, clickSounds } from \"../../../../actions/timer\";\r\n\r\nimport audioPlayer from '../../../../utils/audioPlayer';\r\n\r\nimport \"./style.css\";\r\n\r\nconst Select = lazy(() => import(\"../../Select/Select\"));\r\n\r\nfunction Sound({ type, data, setData }) {\r\n  const sounds = type === 'alarm' ? alarmSounds : type === 'ticking' ? tickingSounds : clickSounds;\r\n  const audioChanging = useRef(audioPlayer({ src: data[`${type}Type`].src, volume: data[`${type}Volume`] }));\r\n  const [change, setChange] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (change !== null && data[`${type}Type`].name !== 'none') {\r\n      audioChanging.current.changeFile(data[`${type}Type`].src);\r\n      audioChanging.current.chengeVolume(data[`${type}Volume`]);\r\n      audioChanging.current.handlePlay();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [change]);\r\n\r\n  const handleChange = (e) => {\r\n    const value = Number(e.target.value);\r\n\r\n    setData({ ...data, [e.target.name]: value });\r\n    setChange(!change);\r\n  }\r\n\r\n  return (\r\n    <div className='sound-details'>\r\n      <div className=\"sound-type\">\r\n        <h4>Sound</h4>\r\n        <Select\r\n          data={data}\r\n          options={sounds}\r\n          setData={setData}\r\n          type={`${type}Type`}\r\n          setChange={setChange}\r\n          width={type === \"click\" ? \"200px\" : \"150px\"}\r\n        />\r\n      </div>\r\n      {data[`${type}Type`].name !== \"none\" && (\r\n        <div className=\"sound-type\">\r\n          <h4>Volume</h4>\r\n          <div className='range-container'>\r\n            <span className='range-value'>{data[`${type}Volume`]}</span>\r\n            <input\r\n              type=\"range\"\r\n              className='range'\r\n              min=\"10\"\r\n              max=\"100\"\r\n              value={data[`${type}Volume`]}\r\n              name={`${type}Volume`}\r\n              onChange={handleChange}\r\n              style={{ background: `linear-gradient(to right, rgba(0, 255, 141, 0.85) 0%, rgba(0, 255, 141, 0.85) ${data[`${type}Volume`]}%, transparent ${data[`${type}Volume`]}%, transparent 100%)` }}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n      {type === \"alarm\" && (\r\n        <div className=\"sound-type\" style={{\r\n          flexDirection: \"row\"\r\n        }}>\r\n          <h4>Repeat</h4>\r\n          <div className='notification-min'>\r\n            <input\r\n              style={{ marginInline: \"10px 0\" }}\r\n              className={(data?.alarmRepet < 0 || data?.alarmRepet > 60) ? 'error' : undefined}\r\n              type=\"number\"\r\n              min=\"0\"\r\n              max=\"60\"\r\n              defaultValue={data?.alarmRepet}\r\n              name=\"alarmRepet\"\r\n              onChange={handleChange} />\r\n            <p style={{ marginLeft: 10 }}>Sec</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sound;\r\n"],"names":["Select","lazy","type","data","setData","sounds","alarmSounds","tickingSounds","clickSounds","audioChanging","useRef","audioPlayer","src","volume","useState","change","setChange","useEffect","name","current","changeFile","chengeVolume","handlePlay","handleChange","e","value","Number","target","className","options","width","min","max","onChange","style","background","flexDirection","marginInline","alarmRepet","undefined","defaultValue","marginLeft"],"sourceRoot":""}